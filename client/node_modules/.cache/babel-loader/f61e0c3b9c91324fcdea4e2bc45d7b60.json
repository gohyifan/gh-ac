{"ast":null,"code":"var _jsxFileName = \"/Users/gohyifan/code/gohyifan/gh-ac/client/src/Search.js\";\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n}; // const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n// }))\n\nexport default class SearchStandard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = async (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      const response = await fetch(`/api/search?q=${value}`);\n      const arr = await response.json(); // this.setState({ isLoading: false, results: arr })\n\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i'); // const isMatch = (result) => re.test(result.title)\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(arr, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Search, Object.assign({\n      fluid: true,\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, JSON.stringify(this.state, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/gohyifan/code/gohyifan/gh-ac/client/src/Search.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","SearchStandard","state","handleResultSelect","e","result","setState","title","handleSearchChange","response","fetch","arr","json","setTimeout","length","re","RegExp","escapeRegExp","filter","isMatch","render","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker'\nimport React, { Component } from 'react'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\n// const source = _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n// }))\n\nexport default class SearchStandard extends Component {\n  state = initialState\n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n  handleSearchChange = async (e, { value }) => {\n    this.setState({ isLoading: true, value })\n    const response = await fetch(`/api/search?q=${value}`);\n    const arr = await response.json();\n    // this.setState({ isLoading: false, results: arr })\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      // const isMatch = (result) => re.test(result.title)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(arr, isMatch),\n      })\n    }, 300)\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <Grid textAlign=\"center\">\n        <Grid.Column width={16}>\n          <Search\n            fluid\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Segment>\n            <Header>State</Header>\n            <pre style={{ overflowX: 'auto' }}>\n              {JSON.stringify(this.state, null, 2)}\n            </pre>\n{/*            <Header>Options</Header>\n            <pre style={{ overflowX: 'auto' }}>\n              {JSON.stringify(source, null, 2)}\n            </pre>*/}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}